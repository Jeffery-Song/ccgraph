// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ccgraph.proto

#include "ccgraph.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ccgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RetRow_ccgraph_2eproto;
namespace CCGraphRPC {
class StartParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartParam> _instance;
} _StartParam_default_instance_;
class CommandParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommandParam> _instance;
} _CommandParam_default_instance_;
class CallParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CallParam> _instance;
} _CallParam_default_instance_;
class RetRowDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RetRow> _instance;
} _RetRow_default_instance_;
class ResultsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Results> _instance;
} _Results_default_instance_;
}  // namespace CCGraphRPC
static void InitDefaultsscc_info_CallParam_ccgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CCGraphRPC::_CallParam_default_instance_;
    new (ptr) ::CCGraphRPC::CallParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCGraphRPC::CallParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CallParam_ccgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CallParam_ccgraph_2eproto}, {}};

static void InitDefaultsscc_info_CommandParam_ccgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CCGraphRPC::_CommandParam_default_instance_;
    new (ptr) ::CCGraphRPC::CommandParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCGraphRPC::CommandParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CommandParam_ccgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CommandParam_ccgraph_2eproto}, {}};

static void InitDefaultsscc_info_Results_ccgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CCGraphRPC::_Results_default_instance_;
    new (ptr) ::CCGraphRPC::Results();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCGraphRPC::Results::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Results_ccgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Results_ccgraph_2eproto}, {
      &scc_info_RetRow_ccgraph_2eproto.base,}};

static void InitDefaultsscc_info_RetRow_ccgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CCGraphRPC::_RetRow_default_instance_;
    new (ptr) ::CCGraphRPC::RetRow();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCGraphRPC::RetRow::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RetRow_ccgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RetRow_ccgraph_2eproto}, {}};

static void InitDefaultsscc_info_StartParam_ccgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CCGraphRPC::_StartParam_default_instance_;
    new (ptr) ::CCGraphRPC::StartParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCGraphRPC::StartParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartParam_ccgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StartParam_ccgraph_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ccgraph_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ccgraph_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ccgraph_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ccgraph_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::StartParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::CommandParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::CommandParam, command_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::CallParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::CallParam, txn_name_),
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::CallParam, param_list_),
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::CallParam, retry_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::RetRow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::RetRow, one_row_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::Results, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::Results, code_),
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::Results, col_name_),
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::Results, table_),
  PROTOBUF_FIELD_OFFSET(::CCGraphRPC::Results, measure_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CCGraphRPC::StartParam)},
  { 5, -1, sizeof(::CCGraphRPC::CommandParam)},
  { 11, -1, sizeof(::CCGraphRPC::CallParam)},
  { 19, -1, sizeof(::CCGraphRPC::RetRow)},
  { 25, -1, sizeof(::CCGraphRPC::Results)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::CCGraphRPC::_StartParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::CCGraphRPC::_CommandParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::CCGraphRPC::_CallParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::CCGraphRPC::_RetRow_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::CCGraphRPC::_Results_default_instance_),
};

const char descriptor_table_protodef_ccgraph_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rccgraph.proto\022\nCCGraphRPC\"\014\n\nStartPara"
  "m\"\037\n\014CommandParam\022\017\n\007command\030\001 \001(\014\"@\n\tCa"
  "llParam\022\020\n\010txn_name\030\001 \001(\014\022\022\n\nparam_list\030"
  "\002 \003(\014\022\r\n\005retry\030\003 \001(\010\"\031\n\006RetRow\022\017\n\007one_ro"
  "w\030\001 \003(\014\"o\n\007Results\022\036\n\004code\030\001 \001(\0162\020.CCGra"
  "phRPC.Code\022\020\n\010col_name\030\002 \003(\014\022!\n\005table\030\003 "
  "\003(\0132\022.CCGraphRPC.RetRow\022\017\n\007measure\030\004 \003(\004"
  "*6\n\004Code\022\007\n\003kOk\020\000\022\r\n\tkConflict\020\001\022\n\n\006kAbo"
  "rt\020\002\022\n\n\006kFatal\020\0032\301\001\n\rCCGraphServer\022<\n\010Sh"
  "utdown\022\026.CCGraphRPC.StartParam\032\026.CCGraph"
  "RPC.StartParam\"\000\0226\n\006RunTxn\022\025.CCGraphRPC."
  "CallParam\032\023.CCGraphRPC.Results\"\000\022:\n\007Comm"
  "and\022\030.CCGraphRPC.CommandParam\032\023.CCGraphR"
  "PC.Results\"\000B\027\n\023com.ccgraph.ccgraphP\001b\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ccgraph_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ccgraph_2eproto_sccs[5] = {
  &scc_info_CallParam_ccgraph_2eproto.base,
  &scc_info_CommandParam_ccgraph_2eproto.base,
  &scc_info_Results_ccgraph_2eproto.base,
  &scc_info_RetRow_ccgraph_2eproto.base,
  &scc_info_StartParam_ccgraph_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ccgraph_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ccgraph_2eproto = {
  false, false, descriptor_table_protodef_ccgraph_2eproto, "ccgraph.proto", 565,
  &descriptor_table_ccgraph_2eproto_once, descriptor_table_ccgraph_2eproto_sccs, descriptor_table_ccgraph_2eproto_deps, 5, 0,
  schemas, file_default_instances, TableStruct_ccgraph_2eproto::offsets,
  file_level_metadata_ccgraph_2eproto, 5, file_level_enum_descriptors_ccgraph_2eproto, file_level_service_descriptors_ccgraph_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ccgraph_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ccgraph_2eproto)), true);
namespace CCGraphRPC {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Code_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ccgraph_2eproto);
  return file_level_enum_descriptors_ccgraph_2eproto[0];
}
bool Code_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void StartParam::InitAsDefaultInstance() {
}
class StartParam::_Internal {
 public:
};

StartParam::StartParam(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCGraphRPC.StartParam)
}
StartParam::StartParam(const StartParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCGraphRPC.StartParam)
}

void StartParam::SharedCtor() {
}

StartParam::~StartParam() {
  // @@protoc_insertion_point(destructor:CCGraphRPC.StartParam)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartParam::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StartParam::ArenaDtor(void* object) {
  StartParam* _this = reinterpret_cast< StartParam* >(object);
  (void)_this;
}
void StartParam::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartParam& StartParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartParam_ccgraph_2eproto.base);
  return *internal_default_instance();
}


void StartParam::Clear() {
// @@protoc_insertion_point(message_clear_start:CCGraphRPC.StartParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCGraphRPC.StartParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCGraphRPC.StartParam)
  return target;
}

size_t StartParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCGraphRPC.StartParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCGraphRPC.StartParam)
  GOOGLE_DCHECK_NE(&from, this);
  const StartParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCGraphRPC.StartParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCGraphRPC.StartParam)
    MergeFrom(*source);
  }
}

void StartParam::MergeFrom(const StartParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCGraphRPC.StartParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StartParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCGraphRPC.StartParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartParam::CopyFrom(const StartParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCGraphRPC.StartParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartParam::IsInitialized() const {
  return true;
}

void StartParam::InternalSwap(StartParam* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CommandParam::InitAsDefaultInstance() {
}
class CommandParam::_Internal {
 public:
};

CommandParam::CommandParam(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCGraphRPC.CommandParam)
}
CommandParam::CommandParam(const CommandParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_command(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CCGraphRPC.CommandParam)
}

void CommandParam::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommandParam_ccgraph_2eproto.base);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CommandParam::~CommandParam() {
  // @@protoc_insertion_point(destructor:CCGraphRPC.CommandParam)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommandParam::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CommandParam::ArenaDtor(void* object) {
  CommandParam* _this = reinterpret_cast< CommandParam* >(object);
  (void)_this;
}
void CommandParam::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommandParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommandParam& CommandParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommandParam_ccgraph_2eproto.base);
  return *internal_default_instance();
}


void CommandParam::Clear() {
// @@protoc_insertion_point(message_clear_start:CCGraphRPC.CommandParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommandParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommandParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCGraphRPC.CommandParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes command = 1;
  if (this->command().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_command(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCGraphRPC.CommandParam)
  return target;
}

size_t CommandParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCGraphRPC.CommandParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_command());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommandParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCGraphRPC.CommandParam)
  GOOGLE_DCHECK_NE(&from, this);
  const CommandParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommandParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCGraphRPC.CommandParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCGraphRPC.CommandParam)
    MergeFrom(*source);
  }
}

void CommandParam::MergeFrom(const CommandParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCGraphRPC.CommandParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
}

void CommandParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCGraphRPC.CommandParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandParam::CopyFrom(const CommandParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCGraphRPC.CommandParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandParam::IsInitialized() const {
  return true;
}

void CommandParam::InternalSwap(CommandParam* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CommandParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CallParam::InitAsDefaultInstance() {
}
class CallParam::_Internal {
 public:
};

CallParam::CallParam(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  param_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCGraphRPC.CallParam)
}
CallParam::CallParam(const CallParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      param_list_(from.param_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  txn_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_txn_name().empty()) {
    txn_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_txn_name(),
      GetArena());
  }
  retry_ = from.retry_;
  // @@protoc_insertion_point(copy_constructor:CCGraphRPC.CallParam)
}

void CallParam::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CallParam_ccgraph_2eproto.base);
  txn_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  retry_ = false;
}

CallParam::~CallParam() {
  // @@protoc_insertion_point(destructor:CCGraphRPC.CallParam)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CallParam::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  txn_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CallParam::ArenaDtor(void* object) {
  CallParam* _this = reinterpret_cast< CallParam* >(object);
  (void)_this;
}
void CallParam::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CallParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CallParam& CallParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CallParam_ccgraph_2eproto.base);
  return *internal_default_instance();
}


void CallParam::Clear() {
// @@protoc_insertion_point(message_clear_start:CCGraphRPC.CallParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_list_.Clear();
  txn_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  retry_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CallParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes txn_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_txn_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bytes param_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_param_list();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // bool retry = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          retry_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CallParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCGraphRPC.CallParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes txn_name = 1;
  if (this->txn_name().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_txn_name(), target);
  }

  // repeated bytes param_list = 2;
  for (int i = 0, n = this->_internal_param_list_size(); i < n; i++) {
    const auto& s = this->_internal_param_list(i);
    target = stream->WriteBytes(2, s, target);
  }

  // bool retry = 3;
  if (this->retry() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_retry(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCGraphRPC.CallParam)
  return target;
}

size_t CallParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCGraphRPC.CallParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes param_list = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(param_list_.size());
  for (int i = 0, n = param_list_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      param_list_.Get(i));
  }

  // bytes txn_name = 1;
  if (this->txn_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_txn_name());
  }

  // bool retry = 3;
  if (this->retry() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CallParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCGraphRPC.CallParam)
  GOOGLE_DCHECK_NE(&from, this);
  const CallParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CallParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCGraphRPC.CallParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCGraphRPC.CallParam)
    MergeFrom(*source);
  }
}

void CallParam::MergeFrom(const CallParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCGraphRPC.CallParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_list_.MergeFrom(from.param_list_);
  if (from.txn_name().size() > 0) {
    _internal_set_txn_name(from._internal_txn_name());
  }
  if (from.retry() != 0) {
    _internal_set_retry(from._internal_retry());
  }
}

void CallParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCGraphRPC.CallParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallParam::CopyFrom(const CallParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCGraphRPC.CallParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallParam::IsInitialized() const {
  return true;
}

void CallParam::InternalSwap(CallParam* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_list_.InternalSwap(&other->param_list_);
  txn_name_.Swap(&other->txn_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(retry_, other->retry_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CallParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RetRow::InitAsDefaultInstance() {
}
class RetRow::_Internal {
 public:
};

RetRow::RetRow(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  one_row_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCGraphRPC.RetRow)
}
RetRow::RetRow(const RetRow& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      one_row_(from.one_row_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCGraphRPC.RetRow)
}

void RetRow::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RetRow_ccgraph_2eproto.base);
}

RetRow::~RetRow() {
  // @@protoc_insertion_point(destructor:CCGraphRPC.RetRow)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RetRow::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RetRow::ArenaDtor(void* object) {
  RetRow* _this = reinterpret_cast< RetRow* >(object);
  (void)_this;
}
void RetRow::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RetRow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RetRow& RetRow::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RetRow_ccgraph_2eproto.base);
  return *internal_default_instance();
}


void RetRow::Clear() {
// @@protoc_insertion_point(message_clear_start:CCGraphRPC.RetRow)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  one_row_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RetRow::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated bytes one_row = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_one_row();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RetRow::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCGraphRPC.RetRow)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes one_row = 1;
  for (int i = 0, n = this->_internal_one_row_size(); i < n; i++) {
    const auto& s = this->_internal_one_row(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCGraphRPC.RetRow)
  return target;
}

size_t RetRow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCGraphRPC.RetRow)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes one_row = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(one_row_.size());
  for (int i = 0, n = one_row_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      one_row_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RetRow::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCGraphRPC.RetRow)
  GOOGLE_DCHECK_NE(&from, this);
  const RetRow* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RetRow>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCGraphRPC.RetRow)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCGraphRPC.RetRow)
    MergeFrom(*source);
  }
}

void RetRow::MergeFrom(const RetRow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCGraphRPC.RetRow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  one_row_.MergeFrom(from.one_row_);
}

void RetRow::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCGraphRPC.RetRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetRow::CopyFrom(const RetRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCGraphRPC.RetRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetRow::IsInitialized() const {
  return true;
}

void RetRow::InternalSwap(RetRow* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  one_row_.InternalSwap(&other->one_row_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RetRow::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Results::InitAsDefaultInstance() {
}
class Results::_Internal {
 public:
};

Results::Results(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  col_name_(arena),
  table_(arena),
  measure_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCGraphRPC.Results)
}
Results::Results(const Results& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      col_name_(from.col_name_),
      table_(from.table_),
      measure_(from.measure_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:CCGraphRPC.Results)
}

void Results::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Results_ccgraph_2eproto.base);
  code_ = 0;
}

Results::~Results() {
  // @@protoc_insertion_point(destructor:CCGraphRPC.Results)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Results::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Results::ArenaDtor(void* object) {
  Results* _this = reinterpret_cast< Results* >(object);
  (void)_this;
}
void Results::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Results::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Results& Results::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Results_ccgraph_2eproto.base);
  return *internal_default_instance();
}


void Results::Clear() {
// @@protoc_insertion_point(message_clear_start:CCGraphRPC.Results)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  col_name_.Clear();
  table_.Clear();
  measure_.Clear();
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Results::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .CCGraphRPC.Code code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_code(static_cast<::CCGraphRPC::Code>(val));
        } else goto handle_unusual;
        continue;
      // repeated bytes col_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_col_name();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .CCGraphRPC.RetRow table = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_table(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated uint64 measure = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_measure(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32) {
          _internal_add_measure(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Results::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCGraphRPC.Results)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CCGraphRPC.Code code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_code(), target);
  }

  // repeated bytes col_name = 2;
  for (int i = 0, n = this->_internal_col_name_size(); i < n; i++) {
    const auto& s = this->_internal_col_name(i);
    target = stream->WriteBytes(2, s, target);
  }

  // repeated .CCGraphRPC.RetRow table = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_table_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_table(i), target, stream);
  }

  // repeated uint64 measure = 4;
  {
    int byte_size = _measure_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          4, _internal_measure(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCGraphRPC.Results)
  return target;
}

size_t Results::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCGraphRPC.Results)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes col_name = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(col_name_.size());
  for (int i = 0, n = col_name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      col_name_.Get(i));
  }

  // repeated .CCGraphRPC.RetRow table = 3;
  total_size += 1UL * this->_internal_table_size();
  for (const auto& msg : this->table_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint64 measure = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->measure_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _measure_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .CCGraphRPC.Code code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Results::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCGraphRPC.Results)
  GOOGLE_DCHECK_NE(&from, this);
  const Results* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Results>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCGraphRPC.Results)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCGraphRPC.Results)
    MergeFrom(*source);
  }
}

void Results::MergeFrom(const Results& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCGraphRPC.Results)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  col_name_.MergeFrom(from.col_name_);
  table_.MergeFrom(from.table_);
  measure_.MergeFrom(from.measure_);
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void Results::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCGraphRPC.Results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Results::CopyFrom(const Results& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCGraphRPC.Results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Results::IsInitialized() const {
  return true;
}

void Results::InternalSwap(Results* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  col_name_.InternalSwap(&other->col_name_);
  table_.InternalSwap(&other->table_);
  measure_.InternalSwap(&other->measure_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Results::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CCGraphRPC
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CCGraphRPC::StartParam* Arena::CreateMaybeMessage< ::CCGraphRPC::StartParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CCGraphRPC::StartParam >(arena);
}
template<> PROTOBUF_NOINLINE ::CCGraphRPC::CommandParam* Arena::CreateMaybeMessage< ::CCGraphRPC::CommandParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CCGraphRPC::CommandParam >(arena);
}
template<> PROTOBUF_NOINLINE ::CCGraphRPC::CallParam* Arena::CreateMaybeMessage< ::CCGraphRPC::CallParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CCGraphRPC::CallParam >(arena);
}
template<> PROTOBUF_NOINLINE ::CCGraphRPC::RetRow* Arena::CreateMaybeMessage< ::CCGraphRPC::RetRow >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CCGraphRPC::RetRow >(arena);
}
template<> PROTOBUF_NOINLINE ::CCGraphRPC::Results* Arena::CreateMaybeMessage< ::CCGraphRPC::Results >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CCGraphRPC::Results >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
